{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/bio.js","webpack://gatsby-starter-default/./src/templates/blog-post.js"],"names":["data","useStaticQuery","author","social","className","layout","formats","src","width","height","quality","alt","href","location","post","siteTitle","previous","next","title","description","excerpt","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","rel"],"mappings":"uKAsDA,IA3CY,WAAM,QACVA,GAAOC,oBADG,cAeVC,EAAM,UAAGF,OAAH,iCAAGA,EAAf,OACMG,EAAM,UAAGH,OAAH,iCAAGA,EAAf,OAEA,OACE,uBAAKI,UAAU,OACb,qBACEA,UADF,aAEEC,OAFF,QAGEC,QAAS,CAAC,OAAQ,OAHpB,QAIEC,IAJF,4BAKEC,MALF,GAMEC,OANF,GAOEC,QAPF,GAQEC,IARF,udAUCT,aAAA,EAAAA,EAAA,OACC,uCACa,8BAASA,EADtB,WAC6CA,aAAA,EAAAA,EAAA,UAD7C,SAGE,qBAAGU,KAAI,yBAAyBT,aAAA,EAAAA,EAAA,UAAzB,KAhBf,yC,+FCqCF,UA3DyB,SAAC,GAAuB,MAArBH,EAAqB,EAArBA,KAAMa,EAAe,EAAfA,SAC1BC,EAAOd,EAAb,eACMe,GAAY,UAAAf,EAAA,gDAAlB,QACQgB,EAAmBhB,EAA3B,SAAkBiB,EAASjB,EAA3B,KAEA,OACE,qBAAQa,SAAR,EAA4BK,MAAOH,GACjC,qBACEG,MAAOJ,cADT,MAEEK,YAAaL,2BAAgCA,EAAKM,UAEpD,2BACEhB,UADF,YAEEiB,WAFF,EAGEC,SAAS,6BAET,8BACE,sBAAIC,SAAS,YAAYT,cAD3B,OAEE,yBAAIA,cAPR,OASE,2BACEU,wBAAyB,CAAEC,OAAQX,EAAKY,MACxCH,SAAS,gBAEX,qBAbF,MAcE,8BACE,oBApBN,QAuBE,uBAAKnB,UAAU,iBACb,sBACEuB,MAAO,CACLC,QADK,OAELC,SAFK,OAGLC,eAHK,gBAILC,UAJK,OAKLC,QAAS,IAGX,0BACGhB,GACC,wBAAMiB,GAAIjB,SAAV,KAAgCkB,IAAI,QAApC,KACKlB,cAZX,QAgBE,0BACGC,GACC,wBAAMgB,GAAIhB,SAAV,KAA4BiB,IAAI,QAC7BjB,cADH,MA3CZ","file":"component---src-templates-blog-post-js-257718432bc57a93ebe0.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`"],"sourceRoot":""}