{"version":3,"sources":["webpack://techfeelo/./src/components/bio.js","webpack://techfeelo/./src/pages/info.js"],"names":["data","useStaticQuery","author","social","className","layout","formats","src","width","height","quality","alt","href","location","siteTitle","posts","title","style","listStyle","post","key","slug","itemScope","itemType","to","itemProp","dangerouslySetInnerHTML","__html","excerpt"],"mappings":"6IAsDA,IA3CY,WAAM,QACVA,GAAOC,oBADG,cAeVC,EAAM,UAAGF,OAAH,iCAAGA,EAAf,OACMG,EAAM,UAAGH,OAAH,iCAAGA,EAAf,OAEA,OACE,uBAAKI,UAAU,OACb,qBACEA,UADF,aAEEC,OAFF,QAGEC,QAAS,CAAC,OAAQ,OAHpB,QAIEC,IAJF,4BAKEC,MALF,GAMEC,OANF,GAOEC,QAPF,GAQEC,IARF,6bAUCT,aAAA,EAAAA,EAAA,OACC,uCACa,8BAASA,EADtB,WAC6CA,aAAA,EAAAA,EAAA,UAD7C,SAGE,qBAAGU,KAAI,yBAAyBT,aAAA,EAAAA,EAAA,UAAzB,KAhBf,yC,+FCmCF,UAzDa,SAAC,GAAuB,MAArBH,EAAqB,EAArBA,KAAMa,EAAe,EAAfA,SACdC,GAAY,UAAAd,EAAA,gDAAlB,QACMe,EAAQf,oBAAd,MAEA,WAAIe,SAEA,qBAAQF,SAAR,EAA4BG,MAAOF,GACjC,qBAAKE,MAAM,cACX,yBAHJ,8JAaA,qBAAQH,SAAR,EAA4BG,MAAOF,GACjC,qBAAKE,MAAM,cACX,oBAFF,MAGE,sBAAIC,MAAO,CAAEC,UAAW,SACrBH,EAAA,KAAU,SAAAI,GACT,IAAMH,EAAQG,qBAA0BA,SAAxC,KAEA,OACE,sBAAIC,IAAKD,SAAYE,MACnB,2BACEjB,UADF,iBAEEkB,WAFF,EAGEC,SAAS,6BAET,8BACE,0BACE,wBAAMC,GAAE,QAAUL,SAAlB,KAAsCM,SAAS,OAC7C,wBAAMA,SAAS,YAHrB,KAME,6BAAQN,cAXZ,OAaE,+BACE,qBACEO,wBAAyB,CACvBC,OAAQR,2BAAgCA,EAAKS,SAE/CH,SAAS","file":"component---src-pages-info-js-0793e33f6dd58da5b846.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          Written by <strong>{author.name}</strong> {author?.summary || null}\n          {` `}\n          <a href={`https://twitter.com/${social?.twitter || ``}`}>\n            You should follow them on Twitter\n          </a>\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst Info = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={`/info${post.fields.slug}`} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default Info\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { collection : { eq: \"info\" } } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}